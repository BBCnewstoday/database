-- --------------------------------------------------------------------------------
-- This is an attempt to create a full transactional update
-- --------------------------------------------------------------------------------
DROP PROCEDURE IF EXISTS `update_mangos`; 

DELIMITER $$

CREATE DEFINER=`root`@`localhost` PROCEDURE `update_mangos`()
BEGIN
    DECLARE bRollback BOOL  DEFAULT FALSE ;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET `bRollback` = TRUE;

    -- Current Values (TODO - must be a better way to do this)
    SET @cCurVersion := (SELECT `version` FROM db_version ORDER BY `version` DESC, STRUCTURE DESC, CONTENT DESC LIMIT 0,1);
    SET @cCurStructure := (SELECT structure FROM db_version ORDER BY `version` DESC, STRUCTURE DESC, CONTENT DESC LIMIT 0,1);
    SET @cCurContent := (SELECT content FROM db_version ORDER BY `version` DESC, STRUCTURE DESC, CONTENT DESC LIMIT 0,1);

    -- Expected Values
    SET @cOldVersion = '21'; 
    SET @cOldStructure = '3'; 
    SET @cOldContent = '6'; 

    -- New Values
    SET @cNewVersion = '21';
    SET @cNewStructure = '3';
    SET @cNewContent = '7';
                            -- DESCRIPTION IS 30 Characters MAX    
    SET @cNewDescription = 'dbdocs_updates';

                        -- COMMENT is 150 Characters MAX
    SET @cNewComment = 'dbdocs_updates from Zero';

    -- Evaluate all settings
    SET @cCurResult := (SELECT description FROM db_version ORDER BY `version` DESC, STRUCTURE DESC, CONTENT DESC LIMIT 0,1);
    SET @cOldResult := (SELECT description FROM db_version WHERE `version`=@cOldVersion AND `structure`=@cOldStructure AND `content`=@cOldContent);
    SET @cNewResult := (SELECT description FROM db_version WHERE `version`=@cNewVersion AND `structure`=@cNewStructure AND `content`=@cNewContent);

    IF (@cCurResult = @cOldResult) THEN    -- Does the current version match the expected version
        -- APPLY UPDATE
        START TRANSACTION;

        -- UPDATE THE DB VERSION
        -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
        INSERT INTO `db_version` VALUES (@cNewVersion, @cNewStructure, @cNewContent, @cNewDescription, @cNewComment);
        SET @cNewResult := (SELECT description FROM db_version WHERE `version`=@cNewVersion AND `structure`=@cNewStructure AND `content`=@cNewContent);

        -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
        -- -- PLACE UPDATE SQL BELOW -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
        -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -

DELETE FROM dbdocsfields WHERE fieldId IN (78, 254, 311, 322, 323, 324, 325, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 474, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 502, 503, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 560, 561, 586, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 817, 834, 835, 852, 861, 990, 999, 1024, 1189, 1190, 1191, 1192, 1193, 1194, 1201, 1202, 1203, 1204, 1205, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1276, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1317, 1321, 1322, 1345, 1346, 1347, 1377, 1380, 1381, 1382, 1383, 1384, 1428, 1429, 1437, 1438, 1439, 1440, 1441, 1442, 1446, 1450, 1455, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1482, 1483, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554);

INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('78', 'creature_ai_scripts', 'event_inverse_phase_mask', 'Mask for the event.', 'This field allows to restrict the event occurences to certain EventAI phases. The EventAI script phases are changed with actions 22 and 23, see below. This mask contains 1 in the bits corresponding to the phases for which you DO NOT wish the event occuring.<br />The default value 0 means that the event may happen in any script phase. The value 1 will disable the event for the phase 0 while keeping it enabled for all other phases. The value 5 will disable the event for phases 0 and 2, and so on.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('254', 'creature_template', 'RegenerateStats', 'Controls if a creature template should regenerate it\'s Health/Mana.', 'This flag is a bitmask field which controls if a creature template should regenerate it\'s Health and/or Power. i.e. To Regenerate both Health and Mana, you would set the template to 3 (1+2).<br />¬subtable:38¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('311', 'db_script_string', 'comment', 'Textual comment.', 'Textual comment, is not used by the core.<br />Usual form is like: CreatureName - Say1, CreatureName - YellAboutIntruders, so on.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('322', 'db_script_string', 'entry', 'Text ID. See dataint parameter of the SCRIPT_COMMAND_TALK command.', 'Text ID. The texts are numbered sequentially starting from 2000000000.<br />This ID is used in the SCRIPT_COMMAND_TALK command (see dataint field).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('323', 'db_script_string', 'language', 'In-game language (See Languages.dbc).', 'In-game language.<br />¬subtable:32¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('324', 'db_script_string', 'sound', 'Sound ID. See SoundEntries.dbc.', 'ID of the sound which will accompany the text appearance.<br />These IDs are tied to filenames in SoundEntries.dbc. The corresponding sound files are stored in the client MPQ archives.<br />Example: sound 8580 is tied to the file CThunDeathIsClose.wav, which is found under SoundCreatureCThun section of an MPQ archive, this time it is patch.MPQ.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('325', 'db_script_string', 'type', 'Sound and speech type.', 'Chat type, affects chat radius and text colouring.<br /><br />¬subtable:31¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('342', 'dbscripts_on_creature_death', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('343', 'dbscripts_on_creature_death', 'command', 'Script command.', 'Script command. Note for this script type, several commands have no sense. These are animation command (will be overridden by death animation), movement, mount, despawn.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('344', 'dbscripts_on_creature_death', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('345', 'dbscripts_on_creature_death', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('346', 'dbscripts_on_creature_death', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('347', 'dbscripts_on_creature_death', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('348', 'dbscripts_on_creature_death', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('349', 'dbscripts_on_creature_death', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('350', 'dbscripts_on_creature_death', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('351', 'dbscripts_on_creature_death', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('352', 'dbscripts_on_creature_death', 'delay', 'Delay (sec).', 'Delay in seconds. Note that for any delay>0, the creature is dead and cannot perform any action by itself (including cast).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('353', 'dbscripts_on_creature_death', 'id', 'Creature ID (See creature_template.entry).', 'ID of the creature (creature_template.entry), at which death will run this script.<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('354', 'dbscripts_on_creature_death', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('355', 'dbscripts_on_creature_death', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('356', 'dbscripts_on_creature_death', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('357', 'dbscripts_on_creature_death', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('358', 'dbscripts_on_creature_death', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('359', 'dbscripts_on_creature_movement', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('360', 'dbscripts_on_creature_movement', 'command', 'Script command.', 'Script command. Note for this script type, either waittime for the waipoint should be defined, or stop/start WP movement should be used.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('361', 'dbscripts_on_creature_movement', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('362', 'dbscripts_on_creature_movement', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('363', 'dbscripts_on_creature_movement', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('364', 'dbscripts_on_creature_movement', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('365', 'dbscripts_on_creature_movement', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('366', 'dbscripts_on_creature_movement', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('367', 'dbscripts_on_creature_movement', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('368', 'dbscripts_on_creature_movement', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('369', 'dbscripts_on_creature_movement', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('370', 'dbscripts_on_creature_movement', 'id', 'Script ID (See creature_movement*.script_id).', 'Script ID (See creature_movement_template.script_id, creature_movement_template.script_id).<br />Usually starts at creature entry * 100.<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('371', 'dbscripts_on_creature_movement', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('372', 'dbscripts_on_creature_movement', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('373', 'dbscripts_on_creature_movement', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('374', 'dbscripts_on_creature_movement', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('375', 'dbscripts_on_creature_movement', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('376', 'dbscripts_on_event', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('377', 'dbscripts_on_event', 'command', 'Script command.', 'Script command.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('378', 'dbscripts_on_event', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('379', 'dbscripts_on_event', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('380', 'dbscripts_on_event', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('381', 'dbscripts_on_event', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('382', 'dbscripts_on_event', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('383', 'dbscripts_on_event', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('384', 'dbscripts_on_event', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('385', 'dbscripts_on_event', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('386', 'dbscripts_on_event', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('387', 'dbscripts_on_event', 'id', 'Event ID (See gameobject_template or Spell.dbc).', 'Event ID (See gameobject_template or Spell.dbc).<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('388', 'dbscripts_on_event', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('389', 'dbscripts_on_event', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('390', 'dbscripts_on_event', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('391', 'dbscripts_on_event', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('392', 'dbscripts_on_event', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('393', 'dbscripts_on_go_template_use', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('394', 'dbscripts_on_go_template_use', 'command', 'Script command.', 'Script command.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('395', 'dbscripts_on_go_template_use', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('396', 'dbscripts_on_go_template_use', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('397', 'dbscripts_on_go_template_use', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('398', 'dbscripts_on_go_template_use', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('399', 'dbscripts_on_go_template_use', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('400', 'dbscripts_on_go_template_use', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('401', 'dbscripts_on_go_template_use', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('402', 'dbscripts_on_go_template_use', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('403', 'dbscripts_on_go_template_use', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('404', 'dbscripts_on_go_template_use', 'id', 'Gameobject ID (See gameobject_template.entry).', 'Gameobject ID (See gameobject_template.entry).<br />Note that commands with source = Unit should not be used here. The correct source may be defined via &quot;buddy&quot; or flag mechanic, see below.<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('405', 'dbscripts_on_go_template_use', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('406', 'dbscripts_on_go_template_use', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('407', 'dbscripts_on_go_template_use', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('408', 'dbscripts_on_go_template_use', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('409', 'dbscripts_on_go_template_use', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('410', 'dbscripts_on_go_use', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('411', 'dbscripts_on_go_use', 'command', 'Script command.', 'Script command.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('412', 'dbscripts_on_go_use', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('413', 'dbscripts_on_go_use', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('414', 'dbscripts_on_go_use', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('415', 'dbscripts_on_go_use', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('416', 'dbscripts_on_go_use', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('417', 'dbscripts_on_go_use', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('418', 'dbscripts_on_go_use', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('419', 'dbscripts_on_go_use', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('420', 'dbscripts_on_go_use', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('421', 'dbscripts_on_go_use', 'id', 'Gameobject GUID (See gameobject.guid).', 'Gameobject GUID (See gameobject.guid).<br />Note that commands with source = Unit will be ineffective here because source = GameObject and target = Player. The correct source may be defined via &quot;buddy&quot; or flag mechanic, see below.<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('422', 'dbscripts_on_go_use', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('423', 'dbscripts_on_go_use', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('424', 'dbscripts_on_go_use', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('425', 'dbscripts_on_go_use', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('426', 'dbscripts_on_go_use', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('427', 'dbscripts_on_gossip', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('428', 'dbscripts_on_gossip', 'command', 'Script command.', 'Script command.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('429', 'dbscripts_on_gossip', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('430', 'dbscripts_on_gossip', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('431', 'dbscripts_on_gossip', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('432', 'dbscripts_on_gossip', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('433', 'dbscripts_on_gossip', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('434', 'dbscripts_on_gossip', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('435', 'dbscripts_on_gossip', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('436', 'dbscripts_on_gossip', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('437', 'dbscripts_on_gossip', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('438', 'dbscripts_on_gossip', 'id', 'Gossip script ID.', 'Gossip script ID (See gossip_menu.script_id, gossip_menu_option.action_script_id).<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('439', 'dbscripts_on_gossip', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('440', 'dbscripts_on_gossip', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('441', 'dbscripts_on_gossip', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('442', 'dbscripts_on_gossip', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('443', 'dbscripts_on_gossip', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('444', 'dbscripts_on_quest_end', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('445', 'dbscripts_on_quest_end', 'command', 'Script command.', 'Script command.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('446', 'dbscripts_on_quest_end', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('447', 'dbscripts_on_quest_end', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('448', 'dbscripts_on_quest_end', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('449', 'dbscripts_on_quest_end', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('450', 'dbscripts_on_quest_end', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('451', 'dbscripts_on_quest_end', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('452', 'dbscripts_on_quest_end', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('453', 'dbscripts_on_quest_end', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('454', 'dbscripts_on_quest_end', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('455', 'dbscripts_on_quest_end', 'id', 'Quest end script ID (See quest_template.CompleteScript).', 'Quest end script ID (See quest_template.CompleteScript).<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('456', 'dbscripts_on_quest_end', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('457', 'dbscripts_on_quest_end', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('458', 'dbscripts_on_quest_end', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('459', 'dbscripts_on_quest_end', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('460', 'dbscripts_on_quest_end', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('461', 'dbscripts_on_quest_start', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('462', 'dbscripts_on_quest_start', 'command', 'Script command.', 'Script command.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('463', 'dbscripts_on_quest_start', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('464', 'dbscripts_on_quest_start', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('465', 'dbscripts_on_quest_start', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('466', 'dbscripts_on_quest_start', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('467', 'dbscripts_on_quest_start', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('468', 'dbscripts_on_quest_start', 'dataint4', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('471', 'dbscripts_on_quest_start', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('472', 'dbscripts_on_quest_start', 'id', 'Quest start script ID (See quest_template.StartScript).', 'Quest start script ID (See quest_template.StartScript).<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('474', 'dbscripts_on_quest_start', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('478', 'dbscripts_on_spell', 'buddy_entry', 'Creature ID (creature_template.entry) for changing source/target.', 'Creature ID (creature_template.entry) for changing source/target.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('479', 'dbscripts_on_spell', 'command', 'Script command.', 'Script command.<br />¬subtable:36¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('480', 'dbscripts_on_spell', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('481', 'dbscripts_on_spell', 'data_flags', 'Command flags.', 'Command flags (see enum ScriptInfoDataFlags in ScriptMgr.h).<br />Default cast direction: source/buddy -> target, flags can change this.<br />¬subtable:37¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('482', 'dbscripts_on_spell', 'dataint', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('483', 'dbscripts_on_spell', 'dataint2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('484', 'dbscripts_on_spell', 'dataint3', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('486', 'dbscripts_on_spell', 'datalong', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('487', 'dbscripts_on_spell', 'datalong2', 'Command parameter, see command description.', 'Command parameter, see command description.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('488', 'dbscripts_on_spell', 'delay', 'Delay (sec).', 'Delay in seconds.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('489', 'dbscripts_on_spell', 'id', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc).<br />The script may contain several commands with identical id. Execution of these commands is not synchronized but the sequence is uniquely defined by \'delay\' parameter.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('490', 'dbscripts_on_spell', 'o', 'Orientation angle (0 to 2*Pi).', 'Orientation angle (0 to 2*Pi): 0 north, Pi south - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('491', 'dbscripts_on_spell', 'search_radius', 'Radius for the buddy search.', 'Radius, in which the buddy will be searched. For changing source/target mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('492', 'dbscripts_on_spell', 'x', 'Position X.', 'X of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('493', 'dbscripts_on_spell', 'y', 'Position Y.', 'Y of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('494', 'dbscripts_on_spell', 'z', 'Position Z.', 'Z of position - for commands requiring position.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('502', 'exploration_basexp', 'basexp', 'Base XP reward.', 'Base XP reward for exploring the area.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('503', 'exploration_basexp', 'level', 'Area level (See AreaTable.dbc).', 'Area level (See ExplorationLevel in AreaTable.dbc).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('511', 'game_event', 'description', 'Description of the event.', 'Textual comment about the event.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('512', 'game_event', 'end_time', 'Global ending date of the event.', 'Ending date of the event. After this date, the event will never happen.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('513', 'game_event', 'entry', 'ID of the event.', 'ID of the event. May be any, should be as low as possible.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('514', 'game_event', 'holiday', 'Holiday ID.', 'Holiday ID is a number, associated with the seasonal events and strictly defined since 3.x (WotLK) client version. Ignore this if you do not know one.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('515', 'game_event', 'length', 'Event duration (minutes).', 'The interval (in minutes) between start and end of single event occurence.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('516', 'game_event', 'occurence', 'Event periodicity (minutes).', 'The interval (minutes) between consequent starts of the event.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('517', 'game_event', 'start_time', 'Global starting date for the event.', 'Starting date for the event. Defines the first event occurence only, see <i>occurence</i> and <i>length</i> for the next ones.<br />NOTE: due to occurence/length event definition, the seasonal events require an editing in leap-years. The simplest solution is to change start_time to the event start at such year.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('518', 'game_event_creature', 'event', 'ID of game event (See game_event.entry).', 'ID of game event (See game_event.entry).<br />If positive, the creature will be spawned at event start and despawned at event end.<br />If negative, the creature will be despawned at event start and spawned again at event end.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('519', 'game_event_creature', 'guid', 'Creature GUID (See creature.guid).', 'GUID of an existing creature.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('520', 'game_event_creature_data', 'entry_id', 'New creature ID (See creature_template.entry).', 'New ID of the creature (See creature_template.entry) applied during the event.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('521', 'game_event_creature_data', 'equipment_id', 'New equipment ID (See creature_equip_template.entry).', 'New equipment ID (See creature_equip_template.entry) applied during the event.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('522', 'game_event_creature_data', 'event', 'Event ID (See game_event.entry).', 'Event ID (See game_event.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('523', 'game_event_creature_data', 'guid', 'Creature GUID (See creature.guid).', 'GUID of the creature (See creature.guid) which should change their appearance during the event.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('524', 'game_event_creature_data', 'modelid', 'New modelID (See creature_template.ModelId1,2)', 'New modelID of the creature (creature_template.ModelId1 or ModelId2) applied during the event.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('525', 'game_event_creature_data', 'spell_end', 'Spell ID (See Spell.dbc) to be removed.', 'ID of the aura spell (See Spell.dbc) to be removed from the creature at event start. Usually this is an aura of unlimited duration, added to the creature via creature_template_addon/creature_addon table. The aura will be applied again at event end.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('526', 'game_event_creature_data', 'spell_start', 'Spell ID (See Spell.dbc) to be selfcasted.', 'ID of the spell (See Spell.dbc) which the creature will cast on self at event start. Usually this is an aura of unlimited duration. The aura will be removed at event end.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('527', 'game_event_gameobject', 'event', 'ID of the event (See game_event.entry).', 'ID of the event (See game_event.entry).<br />If positive, the gameobject is spawned at event start and despawned at event end.<br />If negative, the gameobject is despawned at event start and spawned again at event end.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('528', 'game_event_gameobject', 'guid', 'GUID of gameobject (See gameobject.guid).', 'GUID of an existing gameobject.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('529', 'game_event_mail', 'event', 'Event ID (See game_events.entry).', 'Event ID (See game_events.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('530', 'game_event_mail', 'mailTemplateId', 'Mail template ID (See MailTemplate.dbc).', 'Mail template ID (See MailTemplate.dbc) of the mail which will be sent to the player when all conditions are satisfied.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('531', 'game_event_mail', 'quest', 'Quest (See quest_template.entry) which should be rewarded.', 'The quest (See quest_template.entry) which the player should have REWARDED (handed off) for receiving the mail.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('532', 'game_event_mail', 'raceMask', 'Races of affected players.', 'Races of affected players based on enum Races (See ChrRaces.dbc) in the bitmask form. Values from the table may be combined by simple adding.<br />¬subtable:30¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('533', 'game_event_mail', 'senderEntry', 'NPC entry (See creature_template.entry).', 'Entry (See creature_template.entry) of the NPC which will sign the mail.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('534', 'game_event_quest', 'event', 'Event ID (see game_event.entry).', 'Event ID (see game_event.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('535', 'game_event_quest', 'quest', 'Quest ID (See quest_template.entry).', 'ID of the quest (See quest_template.entry) which will be accessible only during the event.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('536', 'game_graveyard_zone', 'faction', 'Player faction', 'Faction: ALLIANCE = 469, HORDE = 67, both = 0.<br />Some graveyards accept ghosts of players only from one faction.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('560', 'gameobject', 'guid', 'The unique identifier of the game object spawn.', 'The global unique identifier (GUID, low 32-bit) of the GameObject spawn.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('561', 'gameobject', 'id', 'GameObject ID (See gameobject_template.entry).', 'This defines what GameObject will be spawned (see gameobject_template.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('586', 'gameobject_questrelation', 'quest', 'Quest ID (See quest_template.entry).', 'ID of the quest, see quest_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('621', 'gossip_menu', 'condition_id', 'Condition ID (See conditions.condition_entry).', 'ID of the condition (conditions.condition_entry), allowing the gossip to appear. If the condition is not fulfilled by the player, he may not get the gossip.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('622', 'gossip_menu', 'entry', 'Gossip menu ID (See creature_template.GossipMenuId).', 'Gossip menu ID (See creature_template.GossipMenuId). These values are predefined, but a lot of them is unknown.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('623', 'gossip_menu', 'script_id', 'DB script ID (See dbscritps_on_gossip.id).', 'ID of the DB script (dbscripts_on_gossip.id), tied to the action of requesting the gossip.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('624', 'gossip_menu', 'text_id', 'Displayed text ID (See npc_text.ID).', 'ID of the text (npc_text.ID), shown at the top of the gossip windows, above any variants of answer.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('625', 'gossip_menu_option', 'action_menu_id', 'Gossip ID for the action (see gossip_menu.entry).', 'Gossip ID for the action (see gossip_menu.entry).<br />The scheme allows to create chains of gossips. Typical situation is a long story NPC tells to the player, requesting menu item as a confirmation after each brief part.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('626', 'gossip_menu_option', 'action_poi_id', 'POI ID (See points_of_interest.entry).', 'ID of the POI (see points_of_interest.entry) which should be displayed as an action.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('627', 'gossip_menu_option', 'action_script_id', 'DB script ID (See dbscripts_on_gossip.id).', 'ID of DB script (see dbscripts_on_gossip.id) which should be executed as an action.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('628', 'gossip_menu_option', 'box_coded', 'Flag for text entering into the pop-up box.', 'Setting this flag (to 1) allows to player enter any text into the pop-up box.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('629', 'gossip_menu_option', 'box_money', 'Sum of money requested by pop-up box.', 'Money (in coppers) requested by pop-up box as an action.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('630', 'gossip_menu_option', 'box_text', 'Text for the pop-up box.', 'The text names the pop-up box requesting a special input from player.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('631', 'gossip_menu_option', 'condition_id', 'Condition ID (See conditions.condition_entry).', 'ID of the conditions (see conditions.condition_entry) which must be fulfilled by the player in order to get this  gossip menu option. If condition is not fulfilled, the option will be hidden (i.e. not present).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('632', 'gossip_menu_option', 'id', 'Menu item ID.', 'ID of this menu item.<br />Some gossips may contain several variants of the player reply. The variants are numberred by this ID.<br />Menu items are numbered sequentially starting from 0.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('633', 'gossip_menu_option', 'menu_id', 'Gossip menu ID (See gossip_menu.entry).', 'ID of the gossip (gossip_menu.entry), to which this menu item is tied.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('634', 'gossip_menu_option', 'npc_option_npcflag', 'NPC flag required (see creature_template.NpcFlags).', 'NPC flag (see creature_template.NpcFlags) which the NPC should have set to allow this menu item be displayed. The values are from enum NPCFlags in Unit.h.<br />¬subtable:35¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('635', 'gossip_menu_option', 'option_icon', 'Icon type for the menu item.', 'Icon type displayed at the beginning of the menu option text.See enum GossipOptionIcon in GossipDef.h.<br />¬subtable:33¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('636', 'gossip_menu_option', 'option_id', 'Gossip option ID.', 'ID of the option of the gossip menu item, see enum Gossip_Option in GossipDef.h.<br />¬subtable:34¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('637', 'gossip_menu_option', 'option_text', 'Menu item text displayed.', 'Text displayed for the menu item. Should be English only, find localizations in the locales_gossip_menu_option table.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('638', 'gossip_texts', 'comment', 'Textual comment.', 'Textual comment, ignored by the core. Usually should contain the named constant by which this text is referred within the C++ sources.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('648', 'gossip_texts', 'entry', 'Menu item ID text, referred by SD2 scripts.', 'ID of the text of a menu item, generated by SD2 scripts.<br />Numbered starting from -3000000 in arithmetically decreasing order (i.e. to more negative values).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('649', 'instance_template', 'ghostEntranceMap', 'Map ID (See Map.dbc) for ghost entrance.', 'Map ID (See Map.dbc) for ghost entrance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('650', 'instance_template', 'ghostEntranceX', 'X position of ghost entrance.', 'X position of ghost entrance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('651', 'instance_template', 'ghostEntranceY', 'Y position of ghost entrance.', 'Y position of ghost entrance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('652', 'instance_template', 'levelMax', 'Maximum allowed player level.', 'Maximum allowed player level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('653', 'instance_template', 'levelMin', 'Minimum allowed player level.', 'Minimum allowed player level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('654', 'instance_template', 'map', 'Map ID (See Map.dbc).', 'ID of the instance map (see Map.dbc). This map should be instanceable.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('655', 'instance_template', 'maxPlayers', 'Maximal number of players.', 'Maximal number of players allowed into a single copy of the instance at once.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('656', 'instance_template', 'parent', 'Map ID of the parent instance See Map.dbc).', 'Map ID (see Map.dbc) of the parent instance, from which player may enter to this one. Cases like Blackrock Depths/Molten Core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('657', 'instance_template', 'reset_delay', 'Instance reset delay (days).', 'Instance reset delay in days. After time is up, instanced map is deleted and any state of the instance is reset.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('659', 'item_enchantment_template', 'chance', 'Chance to get the enchantment (%).', 'Chance in % for item to get this enchantment.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('660', 'item_enchantment_template', 'ench', 'Enchantment type (See ItemRandomProperties.dbc).', 'Enchantment type (See ItemRandomProperties.dbc).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('661', 'item_enchantment_template', 'entry', 'Random property type (See item_template.RandomProperty).', 'Random property type (See item_template.RandomProperty).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('672', 'item_template', 'AllowableClass', 'Mask of allowed classes.', 'Mask of the classes which may use the item. Numbers from the table may be added.<br />¬subtable:40¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('673', 'item_template', 'AllowableRace', 'Mask of allowed races.', 'Mask of races which may use the item. Values from the table may be added.<br />¬subtable:30¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('674', 'item_template', 'ammo_type', 'The type of ammunition the item uses. Arrows = 2; Bullets = 3', 'The type of ammunition the item uses. Arrows = 2; Bullets = 3');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('675', 'item_template', 'arcane_res', 'Arcane resistance.', 'Arcane resistance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('676', 'item_template', 'area', 'If an item is only usable on a specific map, this is the reference.', 'If an item is only usable on a specific map, this reference a map identifier in the Map.dbc table.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('677', 'item_template', 'armor', 'The armor value of the item.', 'The armor value of the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('678', 'item_template', 'BagFamily', 'If an item is a bag, this holds a bit-mask corresponding to bag families.', 'If an item is a bag, this holds a bit-mask corresponding to bag families to which the bag belongs. The value has to match with bag families defined in ItemBagFamily.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('679', 'item_template', 'block', 'If an item is a shield, this field holds the block chance.', 'If an item is a shield, this field holds the block chance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('680', 'item_template', 'bonding', 'Defines if and how and item will be bound to a character. ', 'Defines if and how and item will be bound to a character. <br />¬subtable:107¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('681', 'item_template', 'BuyCount', 'Stack size by vendors.', 'Stack size by vendors.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('682', 'item_template', 'BuyPrice', 'Item buying price (coppers).', 'Price in coppers for players to buy the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('683', 'item_template', 'class', 'Class of the item.', 'Class of the item is it very general description.<br />¬subtable:16¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('684', 'item_template', 'ContainerSlots', 'Defines the amount of slots for items of type container or ammunition container.', 'Defines the amount of slots for items of type container or ammunition container.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('685', 'item_template', 'delay', 'The delay in milliseconds between successive hits for the item.', 'The delay in milliseconds between successive hits for the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('686', 'item_template', 'description', 'A short - usually one sentence - description of the item. Mostly flavor texts.', 'A short - usually one sentence - description of the item. Mostly flavor texts.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('687', 'item_template', 'DisenchantID', 'Disenchant template (See disenchant_loot_template.entry).', 'Disenchant template (see disenchant_loot_template.entry) if any.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('689', 'item_template', 'dmg_max1', 'The maximum damage caused by the item.', 'The maximum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('690', 'item_template', 'dmg_max2', 'The maximum damage caused by the item.', 'The maximum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('691', 'item_template', 'dmg_max3', 'The maximum damage caused by the item.', 'The maximum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('692', 'item_template', 'dmg_max4', 'The maximum damage caused by the item.', 'The maximum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('693', 'item_template', 'dmg_max5', 'The maximum damage caused by the item.', 'The maximum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('694', 'item_template', 'dmg_min1', 'The minimum damage caused by the item.', 'The minimum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('695', 'item_template', 'dmg_min2', 'The minimum damage caused by the item.', 'The minimum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('696', 'item_template', 'dmg_min3', 'The minimum damage caused by the item.', 'The minimum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('697', 'item_template', 'dmg_min4', 'The minimum damage caused by the item.', 'The minimum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('698', 'item_template', 'dmg_min5', 'The minimum damage caused by the item.', 'The minimum damage caused by the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('699', 'item_template', 'dmg_type1', 'The type of damage the matching dmg_min/dmg_max fields cause.', 'The type of damage the matching dmg_min/dmg_max fields cause.<br />¬subtable:105¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('700', 'item_template', 'dmg_type2', 'The type of damage the matching dmg_min/dmg_max fields cause.', 'The type of damage the matching dmg_min/dmg_max fields cause.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('701', 'item_template', 'dmg_type3', 'The type of damage the matching dmg_min/dmg_max fields cause.', 'The type of damage the matching dmg_min/dmg_max fields cause.<br />¬subtable:105¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('702', 'item_template', 'dmg_type4', 'The type of damage the matching dmg_min/dmg_max fields cause.', 'The type of damage the matching dmg_min/dmg_max fields cause.<br />¬subtable:105¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('703', 'item_template', 'dmg_type5', 'The type of damage the matching dmg_min/dmg_max fields cause.', 'The type of damage the matching dmg_min/dmg_max fields cause.<br />¬subtable:105¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('704', 'item_template', 'Duration', 'Duration before item is removed from a character’s inventory.', 'Items may have a duration set until the get removed from a character’s inventory.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('705', 'item_template', 'entry', 'Item prototype ID.', 'Item prototype ID. Note: do not mix it with the item GUID, which numbers concrete item instances.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('706', 'item_template', 'ExtraFlags', 'With these flags it is possible to set rare conditions on an item. ', 'With these flags it is possible to set rare conditions on an item. <br />¬subtable:108¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('707', 'item_template', 'fire_res', 'Fire resistance.', 'Fire resistance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('708', 'item_template', 'Flags', 'Item prototype flags.', 'Item prototype flags, see enum ItemPrototypeFlags in ItemPrototype.h.<br />¬subtable:39¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('709', 'item_template', 'FoodType', 'If an item is usable as pet food, this table is the reference.', 'If an item is usable as pet food, this table references an entry in the ItemPetFood.dbc table.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('710', 'item_template', 'frost_res', 'Frost resistance.', 'Frost resistance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('711', 'item_template', 'holy_res', 'Holy resistance.', 'Holy resistance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('712', 'item_template', 'InventoryType', 'Inventory type.', 'Type of inventory defining the way of wearing the item.<br />¬subtable:18¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('713', 'item_template', 'ItemLevel', 'Level of item.', 'Level of item. Used by addons in calculating Gear Level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('714', 'item_template', 'itemset', 'If an item is part of an item set, this references the item set’s identifier.', 'If an item is part of an item set, this references the item set’s identifier in the ItemSet.dbc table.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('715', 'item_template', 'LanguageID', 'The material to be used as background for items with page texts set.', 'The material to be used as background for items with page texts set. This references a page text material identifier from PageTextMaterial.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('716', 'item_template', 'lockid', 'Lock ID (See Lock.dbc).', 'ID of the lock (see Lock.dbc) for locked items.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('717', 'item_template', 'Map', 'If an item is only usable on a specific map, this is the reference.', 'If an item is only usable on a specific map, this reference a map identifier in the Map.dbc table.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('718', 'item_template', 'Material', 'Material type.', 'Material type. Used for sound selection when moving item.<br />¬subtable:19¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('720', 'item_template', 'MaxDurability', 'The maximum durability for an item.', 'The maximum durability for an item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('721', 'item_template', 'maxMoneyLoot', 'This field specifies the maximum amount in a container holding money.', 'If an item is a container holding money, this field specifies the maximum amount of money in copper possibly looted.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('722', 'item_template', 'minMoneyLoot', 'This field specifies the minimum amount in a container holding money.', 'If an item is a container holding money, this field specifies the minimum amount of money in copper possibly looted.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('723', 'item_template', 'name', 'Item name.', 'Name of item displayed to the players. See locales_item table for localized versions of this.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('724', 'item_template', 'nature_res', 'Nature resistance.', 'Nature resistance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('725', 'item_template', 'PageMaterial', 'The material to be used as background for items with page texts set.', 'The material to be used as background for items with page texts set. This references a page text material identifier from PageTextMaterial.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('726', 'item_template', 'PageText', 'If the item should be readable, e.g. for letters.', 'If the item should be readable, e.g. for letters, this references a page text identifier in the “page_text” table table.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('727', 'item_template', 'Quality', 'Quality of item.', 'The quality of the item.<br />¬subtable:38¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('728', 'item_template', 'RandomProperty', 'Random property type (See item_enchantment_template.entry).', 'Type of the random property (see item_enchantment_template.entry). For items with either a random property or a random suffix.<br />Actual property of each item instance, taken from the item_enchantment_template list, is stored in item_instance table of the \'characters\' database.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('730', 'item_template', 'RequiredCityRank', 'DEPRECATED: the city rank required. City ranks did not make it into WoW.', 'DEPRECATED: the city rank required. City ranks did not make it into WoW.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('731', 'item_template', 'requiredhonorrank', 'Required honor rank.', 'Required honor rank.<br />¬subtable:102¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('732', 'item_template', 'RequiredLevel', 'Required level.', 'Minimum level required to use the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('733', 'item_template', 'RequiredReputationFaction', 'Required faction for reputation check (See Faction.dbc).', 'The faction (see Faction,dbc), reputation to which will be checked before using the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('734', 'item_template', 'RequiredReputationRank', 'Required minimal reputation rank.', 'The minimal reputation rank required to use the item.<br />¬subtable:42¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('735', 'item_template', 'RequiredSkill', 'Required skill type.', 'Skill type required to use the item, see SpellLine.dbc and enum SkillType in SharedDefines.h.<br />¬subtable:41¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('736', 'item_template', 'RequiredSkillRank', 'Required skill value.', 'Value of the skill required to use the item.<br />¬subtable:102¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('737', 'item_template', 'requiredspell', 'Required spell (See Spell.dbc).', 'The spell ID the character is required to know before using the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('739', 'item_template', 'SellPrice', 'Item selling price (coppers).', 'Price in coppers for players to sell the item.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('740', 'item_template', 'shadow_res', 'Shadow resistance.', 'Shadow resistance.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('741', 'item_template', 'sheath', 'The value of this field controls how characters will show or hide items worn, e.', 'The value of this field controls how characters will show or hide items worn, e.g. for weapons. <br />¬subtable:20¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('742', 'item_template', 'spellcategory_1', 'A spell category identifier.', 'A spell category identifier. The value has to match with a category identifier defined in SpellCategory.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('743', 'item_template', 'spellcategory_2', 'A spell category identifier.', 'A spell category identifier. The value has to match with a category identifier defined in SpellCategory.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('744', 'item_template', 'spellcategory_3', 'A spell category identifier.', 'A spell category identifier. The value has to match with a category identifier defined in SpellCategory.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('745', 'item_template', 'spellcategory_4', 'A spell category identifier.', 'A spell category identifier. The value has to match with a category identifier defined in SpellCategory.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('746', 'item_template', 'spellcategory_5', 'A spell category identifier.', 'A spell category identifier. The value has to match with a category identifier defined in SpellCategory.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('747', 'item_template', 'spellcategorycooldown_1', 'The cooldown in milliseconds for the matching spell category.', 'The cooldown in milliseconds for the matching spell category. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('748', 'item_template', 'spellcategorycooldown_2', 'The cooldown in milliseconds for the matching spell category.', 'The cooldown in milliseconds for the matching spell category. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('749', 'item_template', 'spellcategorycooldown_3', 'The cooldown in milliseconds for the matching spell category.', 'The cooldown in milliseconds for the matching spell category. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('750', 'item_template', 'spellcategorycooldown_4', 'The cooldown in milliseconds for the matching spell category.', 'The cooldown in milliseconds for the matching spell category. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('751', 'item_template', 'spellcategorycooldown_5', 'The cooldown in milliseconds for the matching spell category.', 'The cooldown in milliseconds for the matching spell category. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('752', 'item_template', 'spellcharges_1', 'The amount of charges for the spell referenced in the matching spellid entry. ', 'The amount of charges for the spell referenced in the matching spellid entry. ');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('753', 'item_template', 'spellcharges_2', 'The amount of charges for the spell referenced in the matching spellid entry. ', 'The amount of charges for the spell referenced in the matching spellid entry. ');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('754', 'item_template', 'spellcharges_3', 'The amount of charges for the spell referenced in the matching spellid entry. ', 'The amount of charges for the spell referenced in the matching spellid entry. ');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('755', 'item_template', 'spellcharges_4', 'The amount of charges for the spell referenced in the matching spellid entry. ', 'The amount of charges for the spell referenced in the matching spellid entry. ');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('756', 'item_template', 'spellcharges_5', 'The amount of charges for the spell referenced in the matching spellid entry. ', 'The amount of charges for the spell referenced in the matching spellid entry. ');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('757', 'item_template', 'spellcooldown_1', 'The cooldown in milliseconds for the matching spell.', 'The cooldown in milliseconds for the matching spell. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('758', 'item_template', 'spellcooldown_2', 'The cooldown in milliseconds for the matching spell.', 'The cooldown in milliseconds for the matching spell. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('759', 'item_template', 'spellcooldown_3', 'The cooldown in milliseconds for the matching spell.', 'The cooldown in milliseconds for the matching spell. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('760', 'item_template', 'spellcooldown_4', 'The cooldown in milliseconds for the matching spell.', 'The cooldown in milliseconds for the matching spell. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('761', 'item_template', 'spellcooldown_5', 'The cooldown in milliseconds for the matching spell.', 'The cooldown in milliseconds for the matching spell. If set to -1, the default cooldown from the Spell.dbc table will be used.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('762', 'item_template', 'spellid_1', 'If the item can cast or trigger a spell, this is the reference.', 'If the item can cast or trigger a spell, this references the spell’s entry in Spell.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('763', 'item_template', 'spellid_2', 'If the item can cast or trigger a spell, this is the references.', 'If the item can cast or trigger a spell, this references the spell\'s entry in Spell.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('764', 'item_template', 'spellid_3', 'If the item can cast or trigger a spell, this is the references.', 'If the item can cast or trigger a spell, this references the spell\'s entry in Spell.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('765', 'item_template', 'spellid_4', 'If the item can cast or trigger a spell, this is the references.', 'If the item can cast or trigger a spell, this references the spell\'s entry in Spell.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('766', 'item_template', 'spellid_5', 'If the item can cast or trigger a spell, this is the references.', 'If the item can cast or trigger a spell, this references the spell\'s entry in Spell.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('767', 'item_template', 'spellppmRate_1', 'This controls the proc per minute rate for a spell.', 'If the matching spelltrigger field is of type 2, this controls the proc per minute rate for a spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('768', 'item_template', 'spellppmRate_2', 'This controls the proc per minute rate for a spell.', 'If the matching spelltrigger field is of type 2, this controls the proc per minute rate for a spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('769', 'item_template', 'spellppmRate_3', 'This controls the proc per minute rate for a spell.', 'If the matching spelltrigger field is of type 2, this controls the proc per minute rate for a spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('770', 'item_template', 'spellppmRate_4', 'This controls the proc per minute rate for a spell.', 'If the matching spelltrigger field is of type 2, this controls the proc per minute rate for a spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('771', 'item_template', 'spellppmRate_5', 'This controls the proc per minute rate for a spell.', 'If the matching spelltrigger field is of type 2, this controls the proc per minute rate for a spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('772', 'item_template', 'spelltrigger_1', 'The type of trigger for the matching spellid entry.', 'The type of trigger for the matching spellid entry.<br />¬subtable:106¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('773', 'item_template', 'spelltrigger_2', 'The type of trigger for the matching spellid entry.', 'The type of trigger for the matching spellid entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('774', 'item_template', 'spelltrigger_3', 'The type of trigger for the matching spellid entry.', 'The type of trigger for the matching spellid entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('775', 'item_template', 'spelltrigger_4', 'The type of trigger for the matching spellid entry.', 'The type of trigger for the matching spellid entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('776', 'item_template', 'spelltrigger_5', 'The type of trigger for the matching spellid entry.', 'The type of trigger for the matching spellid entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('777', 'item_template', 'stackable', 'Maximum stack size.', 'Maximum number of items in the single stack.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('778', 'item_template', 'startquest', 'Quest ID (See quest_template.entry).', 'ID of the quest (see quest_template.entry) the item can start.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('779', 'item_template', 'stat_type1', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('780', 'item_template', 'stat_type10', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('781', 'item_template', 'stat_type2', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('782', 'item_template', 'stat_type3', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('783', 'item_template', 'stat_type4', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('784', 'item_template', 'stat_type5', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('785', 'item_template', 'stat_type6', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('786', 'item_template', 'stat_type7', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('787', 'item_template', 'stat_type8', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('788', 'item_template', 'stat_type9', 'An item modifier to apply for this item. ', 'An item modifier to apply for this item. <br />¬subtable:103¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('789', 'item_template', 'stat_value1', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('790', 'item_template', 'stat_value10', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('791', 'item_template', 'stat_value2', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('792', 'item_template', 'stat_value3', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('793', 'item_template', 'stat_value4', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('794', 'item_template', 'stat_value5', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('795', 'item_template', 'stat_value6', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('796', 'item_template', 'stat_value7', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('797', 'item_template', 'stat_value8', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('798', 'item_template', 'stat_value9', 'The value to add for the matching modifier.', 'The value to add for the matching modifier.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('799', 'item_template', 'subclass', 'The subclass of the item template.', 'The subclass of the item template.<br />¬subtable:17¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('800', 'locales_creature', 'entry', 'Creature ID (See creature_template.entry).', 'Creature ID (See creature_template.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('817', 'locales_gameobject', 'entry', 'Gameobject ID (See gameobject_template.entry).', 'Gameobject ID (See gameobject_template.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('834', 'locales_gossip_menu_option', 'id', 'Reference to gossip_menu_option.id.', 'Reference to gossip_menu_option.id.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('835', 'locales_gossip_menu_option', 'menu_id', 'Reference to gossip_menu_option.menu_id.', 'Reference to gossip_menu_option.menu_id.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('852', 'locales_item', 'entry', 'Item ID (See item_template.entry).', 'Item ID (See item_template.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('861', 'locales_npc_text', 'entry', 'Reference to npc_text.ID.', 'Reference to npc_text.ID.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('990', 'locales_page_text', 'entry', 'Reference to page_text.entry.', 'Reference to page_text.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('999', 'locales_points_of_interest', 'entry', 'Reference to points_of_interest.entry.', 'Reference to points_of_interest.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1024', 'locales_quest', 'entry', 'Reference to quest_template.entry.', 'Reference to quest_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1189', 'npc_trainer', 'entry', 'Creature ID (See creature_template.entry).', 'ID of NPC which is a trainer, see creature_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1190', 'npc_trainer', 'reqlevel', 'Required level.', 'Minimal level of character required to learn the spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1191', 'npc_trainer', 'reqskill', 'Required skill type.', 'Type of the skill required to learn the spell.<br />¬subtable:41¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1192', 'npc_trainer', 'reqskillvalue', 'Required skill value.', 'Value of the skill required to learn the spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1193', 'npc_trainer', 'spell', 'Learning spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc). The spell should have SPELL_EFFECT_LEARN_SPELL=36 as one of it effects. In other case it will be ignored.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1194', 'npc_trainer', 'spellcost', 'Learning cost (coppers).', 'The sum in coppers required to pay for learning the spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1201', 'npc_vendor', 'condition_id', 'Condition ID (See conditions.condition_entry).', 'ID of condition (see conditions.condition_entry) which player must fulfill to see this item in the stock. If equal to 0, unconditionally.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1202', 'npc_vendor', 'entry', 'Creature ID (See creature_template.entry).', 'ID ofNPC which is a vendor, see item_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1203', 'npc_vendor', 'incrtime', 'Restoration time, sec.', 'Time interval (sec) at the end of which the limited items are fully restored, i.e. come back in stock.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1204', 'npc_vendor', 'item', 'Item ID (See item_template.entry).', 'ID of item, see item_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1205', 'npc_vendor', 'maxcount', 'Items available.', 'Maximum count of the available item instances. If equal to 0, ulimited supply.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1211', 'page_text', 'entry', 'Reference to item_template.PageText.', 'Reference to item_template.PageText.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1212', 'page_text', 'next_page', 'Reference to page_text.entry.', 'ID of the next page, see page_text.entry. Equals to 0 for the last page.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1213', 'page_text', 'text', 'Text of single page.', 'Text of single page.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1214', 'pet_levelstats', 'agi', 'Pet agility at the level.', 'Pet agility at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1215', 'pet_levelstats', 'armor', 'Pet armor at the level.', 'Pet armor at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1216', 'pet_levelstats', 'creature_entry', 'Creature ID (See creature_template.entry).', 'Creature ID (see creature_template.entry) of the pet.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1217', 'pet_levelstats', 'hp', 'Pet HP at the level.', 'Pet HP at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1218', 'pet_levelstats', 'inte', 'Pet intellect at the level.', 'Pet intellect at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1219', 'pet_levelstats', 'level', 'Pet level.', 'Pet level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1220', 'pet_levelstats', 'mana', 'Pet MP at the level.', 'Pet mana points at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1221', 'pet_levelstats', 'spi', 'Pet spirit at the level.', 'Pet spirit at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1222', 'pet_levelstats', 'sta', 'Pet stamina at the level.', 'Pet stamina at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1223', 'pet_levelstats', 'str', 'Pet strength at the level.', 'Pet strength at the level.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1224', 'pet_name_generation', 'entry', 'Creature ID (See creature_template.entry).', 'Creature ID (See creature_template.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1225', 'pet_name_generation', 'half', 'Type of the word.', 'Type of the word. If equal to 0, the word is first namepart, otherwise is the second one.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1226', 'pet_name_generation', 'id', 'Table index.', 'Table index, increases sequentially starting from 1.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1227', 'pet_name_generation', 'word', 'Part of the name.', 'Part of the name.<br />The first namepart for half equal to 0, the second part otherwise.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1276', 'points_of_interest', 'entry', 'POI ID.', 'POI ID.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1278', 'points_of_interest', 'icon', 'POI icon.', 'Icon for the POI. An incomplete list of icons follows.<br />¬subtable:43¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1280', 'points_of_interest', 'x', 'X coordinate.', 'X coordinate of the POI.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1281', 'points_of_interest', 'y', 'Y coordinate.', 'Y coordinate of the POI.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1282', 'pool_creature', 'chance', 'Chance in %.', 'Chance (%) for the creature to be spawned in the pool.<br />Either the sum of chances should be equal to 100, or all the chances for a pool should be 0. The latter is provided for description of even-chance pools.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1283', 'pool_creature', 'description', 'Description.', 'Textual description ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1284', 'pool_creature', 'guid', 'Creature GUID (See creature.guid).', 'GUID of the creature, see creature.guid.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1285', 'pool_creature', 'pool_entry', 'Pool ID (See pool_template.entry).', 'ID of the pool, see pool_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1286', 'pool_creature_template', 'chance', 'Chance, %.', 'Chance (%) of the creature to be spawned within the pool.<br />For a pool, either sum of chances should be equal to 100, or all chances should be 0. The latter describes an even-chanced pool.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1287', 'pool_creature_template', 'description', 'Description.', 'Textual description, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1288', 'pool_creature_template', 'id', 'Creature ID (See creature_template.entry).', 'ID of the creature, see creature_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1289', 'pool_creature_template', 'pool_entry', 'Pool ID (See pool_template.entry).', 'Pool ID (See pool_template.entry).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1290', 'pool_gameobject', 'chance', 'Chance, %.', 'Chance (%) for the gameobject to be spawned within the pool.<br />For a pool, either the sum of chances should be equal to 100, or all chances should be 0. The latter describes an even-chanced pool.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1291', 'pool_gameobject', 'description', 'Description.', 'Textual description, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1292', 'pool_gameobject', 'guid', 'Gameobject GUID (See gameobject.guid).', 'GUID of the gameobject, see gameobject.guid.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1293', 'pool_gameobject', 'pool_entry', 'Pool ID (See pool_template.entry).', 'ID of the pool, see pool_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1294', 'pool_gameobject_template', 'chance', 'Chance, %.', 'Chance (%) for the gameobject to be spawned within the pool.<br />For a pool, either the sum of chances should be equal to 100, or all chances should be 0. The latter describes an even-chanced pool.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1295', 'pool_gameobject_template', 'description', 'Description.', 'Textual description, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1296', 'pool_gameobject_template', 'id', 'Gameobject ID (See gameobject_template.entry).', 'ID of the gameobject, see gameobject_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1297', 'pool_gameobject_template', 'pool_entry', 'Pool ID (See pool_template.entry).', 'ID of the pool, see pool_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1298', 'pool_pool', 'chance', 'Chance, %.', 'Chance (%) for the pool to be spawned within the mother pool.<br />For a pool, either the sum of chances should be equal to 100, or all chances should be 0. The latter describes an even-chanced pool.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1299', 'pool_pool', 'description', 'Description.', 'Textual description, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1300', 'pool_pool', 'mother_pool', 'Mother pool ID.', 'ID of the pool to which the pool belongs.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1301', 'pool_pool', 'pool_id', 'Pool ID (See pool_template.entry).', 'ID of the pool, see pool_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1302', 'pool_template', 'description', 'Description.', 'Textual description, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1303', 'pool_template', 'entry', 'Pool ID.', 'ID of the pool. It is mentioned in other pool_* tables like pool_creature.pool_entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1304', 'pool_template', 'max_limit', 'Maximum number of entities.', 'Maximum number of entities spawned within the pool.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1317', 'quest_template', 'entry', 'The unique identifier of the quest template entry.', 'The unique identifier of the quest template entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1321', 'quest_template', 'Method', 'This flag decides how a quest will be handled.', 'This flag decides how a quest will be handled.<br />Allowed values: 0 autocompleted, 1 disabled, 2 usual handling.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1322', 'quest_template', 'MinLevel', 'The lowest level allowed to accept the quest.', 'The lowest level allowed to accept the quest.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1345', 'quest_template', 'QuestLevel', 'The quest\'s level.', 'The quest\'s level. Depending on the quest’s level, the experience rewarded for the quest will be awarded. *If a character’s level is <= QuestLevel+5, full experience will be given. *If QuestLevel is set to -1, the character’s level will be used as QuestLevel.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1346', 'quest_template', 'RepObjectiveFaction', 'Faction (See Faction.dbc).', 'Faction (see Faction.dbc) to which the character should have a given reputation for completing the quest.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1347', 'quest_template', 'RepObjectiveValue', 'Reputation value.', 'The value of the reputation the character should have to a given faction for completing the quest.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1377', 'quest_template', 'RequiredClasses', 'Required classes mask.', 'Bitmask of the classes which may obtain the quest (any if 0).<br />¬subtable:40¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1380', 'quest_template', 'RequiredMinRepFaction', 'Faction (See Faction.dbc).', 'The faction (see Faction.dbc) to which the character should have a given reputation value (not below) for obtaining the quest.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1381', 'quest_template', 'RequiredMinRepValue', 'Reputation value.', 'The reputation value that should not be above the character standing in order to obtain teh quest.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1382', 'quest_template', 'RequiredRaces', 'Required races mask.', 'Mask of the races which may obtain the quest (any if 0).<br />¬subtable:30¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1383', 'quest_template', 'RequiredSkill', 'Required skill type.', 'Skill type required from character to obtain the quest.<br />¬subtable:41¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1384', 'quest_template', 'RequiredSkillValue', 'Required skill value.', 'Required value of the skill allowing character to obtain the quest.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1428', 'quest_template', 'Type', 'Quest\'s difficulty.', 'Classifies a quest\'s difficulty. This references an entry from QuestInfo.dbc (see QuestInfo.dbc). The following table lists allowed values:<br />¬subtable:44¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1429', 'quest_template', 'ZoneOrSort', 'Defines the category under which a quest will be listed.', 'Defines the category under which a quest will be listed in the in-game quest log. Depending on the sign of the value different category sources will be used. * If the value is > 0, the value references an entry from AreaTable.dbc. * If the value is < 0, the value references an entry from QuestSort.dbc. This is usually the case for class or skill related quests.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1437', 'reputation_reward_rate', 'creature_rate', 'Rate for creature kill reputation.', 'Rate for the reputation gained from creature killing.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1438', 'reputation_reward_rate', 'faction', 'Faction (See Faction.dbc).', 'Faction (see Faction.dbc) reputation gain to which is modified.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1439', 'reputation_reward_rate', 'quest_rate', 'Rate for quest reputation.', 'Rate for the reputation gained from quests.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1440', 'reputation_reward_rate', 'spell_rate', 'Rate for reputation spells.', 'Rate for the reputation gained by spells with SPELL_EFFECT_REPUTATION=103.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1441', 'reputation_spillover_template', 'faction', 'Base faction (See Faction.dbc).', 'Base faction (see Faction.dbc). Modifying reputation to this faction triggers respective reputation changes for factions 1-4 defined below.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1442', 'reputation_spillover_template', 'faction1', 'Dependent faction (See Faction.dbc).', 'Dependent faction one (See Faction.dbc).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1446', 'reputation_spillover_template', 'rank_1', 'The topmost rank allowed.', 'The topmost reputation rank allowed. Since reaching it, the faction one reputation is not influenced by this table and should be gained directly.<br />¬subtable:42¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1450', 'reputation_spillover_template', 'rate_1', 'Rate for faction one.', 'The rate applied to the base reputation change, then the result is added to the faction one reputation.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1455', 'script_texts', 'comment', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1466', 'script_texts', 'entry', 'Script text ID.', 'Script text ID, see SD2 sources. The value is negative and should be between -1000000 and -1999999.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1467', 'script_texts', 'language', 'In-game language.', 'In-game language restircts the understanding of the ingame text to ones having corresponding skill.<br />¬subtable:32¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1468', 'script_texts', 'sound', 'Sound ID (See SoundEntries.dbc).', 'Sound ID. The SoundEntries.dbc maps these IDs to the filenames *.wav, the files are in the MPQ archives.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1469', 'script_texts', 'type', 'Chat type (see enum ChatType in Creature.h).', 'Sound ID (See SoundEntries.dbc).<br />¬subtable:31¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1470', 'script_waypoint', 'entry', 'Creature ID (See creature_template.entry).', 'Creature ID, see creature_template.entry.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1471', 'script_waypoint', 'location_x', 'X position of WP.', 'X position of the WP.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1472', 'script_waypoint', 'location_y', 'Y position of WP.', 'Y position of the WP.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1473', 'script_waypoint', 'location_z', 'Z position of WP.', 'Z position of the WP.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1474', 'script_waypoint', 'point_comment', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1475', 'script_waypoint', 'pointid', 'Point ID.', 'Point ID. The WPs are numerated sequentially starting from 0.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1476', 'script_waypoint', 'waittime', 'Wait time (msec).', 'Wait time in milliseconds. The creature will stay at the WP for this time.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1477', 'scripted_areatrigger', 'entry', 'Areatrigger ID (See AreaTrigger.dbc).', 'Areatrigger ID (See AreaTrigger.dbc).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1479', 'scripted_event', 'id', 'Eevnt ID.', 'Event ID. This ID may be found in a spell with SPELL_EFFECT_SEND_EVENT=61, in the gameobject_template table for few GO types, or in the taxi node point data.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1482', 'skill_fishing_base_level', 'entry', 'Area ID (See AreaTable.dbc).', 'Area ID (See AreaTable.dbc).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1483', 'skill_fishing_base_level', 'skill', 'Fishing skill value.', 'Skill value of fishing. May be negative. It is used in the formula determining success of fish catching:<br />success = (player_skill > skill) AND (player_skill - skill + 5 > RANDOM(1...100))');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1491', 'spell_affect', 'effectId', 'Effect ID (See Spell.dbc).', 'ID of the effect of the spell, see Spell.dbc. Numbered from 0, so equals 0 to 2.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1492', 'spell_affect', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc). The spell should apply an aura of any type from: SPELL_AURA_ADD_FLAT_MODIFIER, SPELL_AURA_ADD_PCT_MODIFIER, SPELL_AURA_ADD_TARGET_TRIGGER, SPELL_AURA_OVERRIDE_CLASS_SCRIPTS.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1493', 'spell_affect', 'SpellFamilyMask', 'SpellFamilyFlags (See Spell.dbc).', 'SpellFamilyFlags, see Spell.dbc and struct SpellEntry in DBCStructure.h. This is 64-bit value.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1494', 'spell_area', 'area', 'Area ID (See AreaTable.dbc).', 'Area ID, see AreaTable.dbc. If equals to 0, is not limited to any zone.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1495', 'spell_area', 'aura_spell', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc) of the aura spell which the character should already have applied (if positive) or do not have (if negative).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1496', 'spell_area', 'autocast', 'Autocast flag.', 'If set, this flag requires the spell to be catsed on the character just entered the area. In other case, the spell is enabled for the character to be casted.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1497', 'spell_area', 'condition_id', 'Condition ID (See conditions.condition_entry).', 'Condition ID (See conditions.condition_entry) of teh condition which should be fulfilled.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1498', 'spell_area', 'gender', 'Gender.', 'Gender of the character (0 = male, 1 = female, 2 = not defined).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1499', 'spell_area', 'quest_end', 'Quest ID (See quest_template.entry).', 'Quest ID (see quest_template.entry) of the quest that should not be rewarded.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1500', 'spell_area', 'quest_start', 'Quest ID (See quest_template.entry).', 'Quest ID (see quest_template.entry) that should be either active or rewarded.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1501', 'spell_area', 'quest_start_active', 'Flag for quest_start.', 'If set, this flag allows the quest mentioned in the quest_start field to be rewarded, not only be active.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1502', 'spell_area', 'racemask', 'Race mask value.', 'Race mask value. The entries may be combined by simple adding.<br />¬subtable:30¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1503', 'spell_area', 'spell', 'Spell ID (See Spell.dbc).', 'Spell ID, see Spell.dbc. The spell is either casted on the character or is allowed the character to cast.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1505', 'spell_bonus_data', 'ap_dot_bonus', 'DoT bonus for physical damage.', 'DoT bonus coefficient for the spells with physical damage type.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1506', 'spell_bonus_data', 'comments', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1507', 'spell_bonus_data', 'direct_bonus', 'Direct damage bonus.', 'Direct damage spell bonus coefficient.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1508', 'spell_bonus_data', 'direct_bonus_done', 'Direct bonus for done part.', 'Direct damage bonus coefficient for done part.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1509', 'spell_bonus_data', 'direct_bonus_taken', 'Direct damage taken bonus.', 'Direct damage bonus coefficient for taken part.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1510', 'spell_bonus_data', 'dot_bonus', 'DoT tick bonus coefficient.', 'DoT tick bonus coefficient.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1511', 'spell_bonus_data', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc) of the spells which bonus are to be modified.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1512', 'spell_bonus_data', 'one_hand_direct_bonus', 'Direct bonus for one-handed weapon.', 'Direct damage spell bonus coefficient while a one-handed weapon equipped.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1513', 'spell_bonus_data', 'one_hand_direct_bonus_done', 'Direct damage done bonus with one-handed weapon.', 'Direct damage bonus coefficient for done part while a one-handed weapon equipped.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1514', 'spell_bonus_data', 'one_hand_direct_bonus_taken', 'Direct damage taken bonus with one-handed weapon.', 'Direct damage bonus coefficient for taken part while a one-handed weapon equipped.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1515', 'spell_bonus_data', 'two_hand_direct_bonus', 'Direct damage bonus for two-handed weapon.', 'Direct damage spell bonus coefficient while a two-hand weapon equipped.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1516', 'spell_bonus_data', 'two_hand_direct_bonus_done', 'Direct damage done bonus with two-handed weapon.', 'Direct damage bonus coefficient for done part while a two-handed weapon equipped.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1517', 'spell_bonus_data', 'two_hand_direct_bonus_taken', 'Direct damage taken bonus with two-handed weapon.', 'Direct damage bonus coefficient for taken part while a two-handed weapon equipped.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1518', 'spell_chain', 'first_spell', 'Lowest rank spell.', 'Spell ID for the lowest rank spell of the chain.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1519', 'spell_chain', 'prev_spell', 'Previous rank of the spell.', 'Spell ID for the previous rank of the spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1520', 'spell_chain', 'rank', 'Rank.', 'Spell rank, numbered from 1.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1521', 'spell_chain', 'req_spell', 'Required spell ID.', 'ID of the side spell to be known to allow the whole spell chain. This is for talent-enabled spells.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1522', 'spell_chain', 'spell_id', 'Spell ID.', 'Spell ID.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1523', 'spell_elixir', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1524', 'spell_elixir', 'mask', 'Type mask.', 'Type mask of the spell used by an elixir. Not defined yet, all records have 0 here (version 0.20).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1525', 'spell_facing', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc).');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1526', 'spell_facing', 'facingcasterflag', 'Facing caster flags.', 'Facing caster flags, see enum SpellFacingFlags in Unit.h.<br />Currenlty (0.20), in the core is defined the only flag SPELL_FACING_FLAG_INFRONT=1.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1527', 'spell_learn_spell', 'Active', 'Active flag.', 'The active flag. If set, the spell is enabled as active, i.e. allowed to be casted.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1528', 'spell_learn_spell', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc) of the triggering spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1529', 'spell_learn_spell', 'SpellID', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc) of the additional spell to learn.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1530', 'spell_linked', 'comment', 'Textual comment.', 'Textual comment, ignored by the core.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1531', 'spell_linked', 'effect_mask', 'Effect mask.', 'The link may be limited to any or all spelleffects. The mask values are 1, 2, 4 for EFFECT_0, EFFECT_1, EFFECT_2 respectively. The values may be combined by adding.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1532', 'spell_linked', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc) of the triggering spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1533', 'spell_linked', 'linked_entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc) of the triggered spell.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1534', 'spell_linked', 'type', 'Link type.', 'Type of spell link, see enum SpellLinkedType in SpellMgr.h.<br />¬subtable:45¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1535', 'spell_pet_auras', 'aura', 'Spell ID (See Spell.dbc).', 'Spell ID (see Spell.dbc) of the aura spell to be applied on the pet.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1536', 'spell_pet_auras', 'pet', 'Creature ID (See creature_template.entry).', 'Pet creature ID, see creature_template.enrty.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1537', 'spell_pet_auras', 'spell', 'Spell ID (See Spell.dbc).', 'Spell ID (see Spell.dbc) of the triggering spell. One of its spelleffects should be either EFFECT_DUMMY or applying the aura AURA_DUMMY.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1538', 'spell_proc_event', 'Cooldown', 'Cooldown (in msec).', 'A hidden cooldown used for some spell proc events, applied to _triggered_spell_.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1539', 'spell_proc_event', 'CustomChance', 'Chance of proc.', 'Chance of proc. If equals to 0, the standard value from Spell.dbc is used, else overrides it.<br />Mostly used for spell debugging when it is convenient to set the chance to 100%.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1540', 'spell_proc_event', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (see Spell.dbc) of the aura that may proc during another spellcast or under other conditions defined in this table.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1541', 'spell_proc_event', 'ppmRate', 'Proc frequency limit.', 'The value limits the proc frequency. For melee (ranged?) damage spells it is the proc rate per minute. The actual proc may happen less frequently but not more frequently than defined here.<br />If zero, falls back to flat chance from Spell.dbc.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1542', 'spell_proc_event', 'procEx', 'Flags refining proc condition.', 'Flags refining proc condition, optional.<br />¬subtable:49¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1543', 'spell_proc_event', 'procFlags', 'Flags defining conditions for aura to proc.', 'Bitmask defining conditions for aura to proc. Values may be combined by adding. If equals to 0, the value form Spell.dbc is used.<br />¬subtable:48¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1544', 'spell_proc_event', 'SchoolMask', 'Spell school mask.', 'Spell school mask. Spell School is defined in in the second field of Spell.dbc entry. This value is the bitmask (see enum SpellSchoolMask in SharedDefines.h), where different schools may be combined.<br />¬subtable:46¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1545', 'spell_proc_event', 'SpellFamilyMask0', 'Spell family mask for effect 0.', 'Spell family mask for EFFECT_0.<br />The SpellFamilyMask is a 64-bit value defined for each spell in Spell.dbc (see SpellFamilyFlags field of struct SpellEntry in DBCStructure.h). It classifies the spell into a group within each SpellFamilyName, presenting a simple way to recognizing spells, for example, one spell of different ranks. The 64-bit values are defined in the sources as UI64LIT() type.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1546', 'spell_proc_event', 'SpellFamilyMask1', 'Spell family mask for effect 1.', 'Spell family mask for EFFECT_1.<br />The SpellFamilyMask is a 64-bit value defined for each spell in Spell.dbc (see SpellFamilyFlags field of struct SpellEntry in DBCStructure.h). It classifies the spell into a group within each SpellFamilyName, presenting a simple way to recognizing spells, for example, one spell of different ranks. The 64-bit values are defined in the sources as UI64LIT() type.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1547', 'spell_proc_event', 'SpellFamilyMask2', 'Spell family mask for effect 2.', 'Spell family mask for EFFECT_2.<br />The SpellFamilyMask is a 64-bit value defined for each spell in Spell.dbc (see SpellFamilyFlags field of struct SpellEntry in DBCStructure.h). It classifies the spell into a group within each SpellFamilyName, presenting a simple way to recognizing spells, for example, one spell of different ranks. The 64-bit values are defined in the sources as UI64LIT() type.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1548', 'spell_proc_event', 'SpellFamilyName', 'Spell family name.', 'Spell family name classifies the spell as intended mostly for specific character class, see enum SpellFamily in DBCEnums.h. The field is defined for each spell in Spell.dbc, see SpellFamilyName field of struct SpellEntry in DBCStructure.h.<br />¬subtable:47¬');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1549', 'spell_proc_item_enchant', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc). Should be the first rank spell if in the rank chain.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1550', 'spell_proc_item_enchant', 'ppmRate', 'Proc frequency limit, per minute.', 'The value (times per minute) limits the enchant proc frequency.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1551', 'spell_script_target', 'entry', 'Spell ID (See Spell.dbc).', 'Spell ID (See Spell.dbc) of the spell requiring external implicit target definition. The target type of a spelleffect has to be one of the following (look for the values at enum Targets in SharedDefines.h):<br />TARGET_SCRIPT, TARGET_SCRIPT_COORDINATES, TARGET_FOCUS_OR_SCRIPTED_GAMEOBJECT, TARGET_AREAEFFECT_INSTANT, TARGET_AREAEFFECT_CUSTOM, TARGET_AREAEFFECT_GO_AROUND_SOURCE, TARGET_AREAEFFECT_GO_AROUND_DEST, TARGET_NARROW_FRONTAL_CONE');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1552', 'spell_script_target', 'inverseEffectMask', 'Inverse effect mask.', 'The bitmask (bits 0, 1, 2 corresponding to values 1, 2, 4) of the spell effect numbers that do not use this mechanic.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1553', 'spell_script_target', 'targetEntry', 'Creature ID or Gameobject ID.', 'Creature ID (creature_template.entry) or Gameobject ID (gameobject_template.entry) dependently on the type.');
INSERT INTO dbdocsfields (`fieldId`, `tableName`, `fieldName`, `fieldComment`, `fieldNotes`) VALUES ('1554', 'spell_script_target', 'type', 'Type of the target entry.', 'Type of the target entry.<br />¬subtable:50¬');

        -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
        -- -- PLACE UPDATE SQL ABOVE -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
        -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -

        -- If we get here ok, commit the changes
        IF bRollback = TRUE THEN
            ROLLBACK;
            SHOW ERRORS;
            SELECT '* UPDATE FAILED *' AS `===== Status =====`,@cCurResult AS `===== DB is on Version: =====`;



        ELSE
            COMMIT;
            SELECT '* UPDATE COMPLETE *' AS `===== Status =====`,@cNewResult AS `===== DB is now on Version =====`;
        END IF;
    ELSE    -- Current version is not the expected version
        IF (@cCurResult = @cNewResult) THEN    -- Does the current version match the new version
            SELECT '* UPDATE SKIPPED *' AS `===== Status =====`,@cCurResult AS `===== DB is already on Version =====`;
        ELSE    -- Current version is not one related to this update
	    IF(@cCurResult IS NULL) THEN    -- Something has gone wrong
                SELECT '* UPDATE FAILED *' AS `===== Status =====`,'Unable to locate DB Version Information' AS `============= Error Message =============`;
	    ELSE
                SELECT '* UPDATE SKIPPED *' AS `===== Status =====`,@cOldResult AS `=== Expected ===`,@cCurResult AS `===== Found Version =====`;
            END IF;
        END IF;
    END IF;
END $$

DELIMITER ;

-- Execute the procedure
CALL update_mangos();

-- Drop the procedure
DROP PROCEDURE IF EXISTS `update_mangos`;